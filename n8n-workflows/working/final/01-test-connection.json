{
  "name": "01 - Test Connessione PlayBasket",
  "nodes": [
    {
      "parameters": {
        "url": "https://www.playbasket.it/toscana/league.php?lt=2&lf=M&lr=TO&lp=FI&lc=C%2FM&lg=1&mod=st",
        "responseFormat": "string"
      },
      "id": "http-test",
      "name": "Get HTML",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [260, 300]
    },
    {
      "parameters": {
        "jsCode": "// === TEST CONNESSIONE PLAYBASKET ===\nconsole.log('üß™ Test connessione PlayBasket...');\n\nlet htmlData = '';\nlet accessMethod = 'none';\n\nif (items && items.length > 0) {\n  const item = items[0];\n  console.log('üì• Item keys:', Object.keys(item || {}));\n  \n  // Prova tutti i metodi possibili\n  if (item.json && item.json.data && typeof item.json.data === 'string') {\n    htmlData = item.json.data;\n    accessMethod = 'item.json.data';\n  } else if (item.json && typeof item.json === 'string') {\n    htmlData = item.json;\n    accessMethod = 'item.json';\n  } else if (item.data && typeof item.data === 'string') {\n    htmlData = item.data;\n    accessMethod = 'item.data';\n  }\n  \n  console.log('üìä Accesso:', accessMethod, 'Lunghezza:', htmlData.length);\n}\n\n// Test parsing\nlet tableFound = false;\nlet teamsCount = 0;\n\nif (htmlData && htmlData.length > 1000) {\n  const tableMatch = htmlData.match(/<table[^>]*league_standings_ranking[^>]*>([\\s\\S]*?)<\\/table>/i);\n  \n  if (tableMatch) {\n    tableFound = true;\n    const rows = tableMatch[1].match(/<tr[^>]*>([\\s\\S]*?)<\\/tr>/gi) || [];\n    teamsCount = Math.max(0, rows.length - 1); // Esclude header\n  }\n}\n\nconst result = {\n  timestamp: new Date().toISOString(),\n  connection: {\n    success: htmlData.length > 1000,\n    htmlLength: htmlData.length,\n    accessMethod: accessMethod\n  },\n  parsing: {\n    tableFound: tableFound,\n    teamsFound: teamsCount,\n    success: tableFound && teamsCount > 5\n  },\n  overall: {\n    success: htmlData.length > 1000 && tableFound && teamsCount > 5,\n    message: (htmlData.length > 1000 && tableFound && teamsCount > 5) ? \n      `‚úÖ Test OK: ${teamsCount} squadre con metodo ${accessMethod}` :\n      `‚ùå Test fallito: HTML=${htmlData.length}, Tabella=${tableFound}, Squadre=${teamsCount}`\n  }\n};\n\nconsole.log('üéØ Risultato:', result);\nreturn [{ json: result }];"
      },
      "id": "test-connection",
      "name": "Test Connection",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [480, 300]
    }
  ],
  "connections": {
    "Get HTML": {
      "main": [
        [
          {
            "node": "Test Connection",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "timezone": "Europe/Rome"
  },
  "versionId": "test-connection-v1",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "id": "test-connection-workflow",
  "tags": []
}

