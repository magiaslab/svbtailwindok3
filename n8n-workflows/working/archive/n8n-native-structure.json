{
  "name": "Basket San Vincenzo Scraping",
  "active": false,
  "nodes": [
    {
      "parameters": {},
      "id": "f1b8c8a0-1234-5678-9abc-def012345678",
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "url": "https://www.playbasket.it/toscana/league.php?lt=2&lf=M&lr=TO&lp=FI&lc=C%2FM&lg=1&mod=st",
        "options": {
          "timeout": 60000
        }
      },
      "id": "a1b2c3d4-5678-9abc-def0-123456789012",
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "jsCode": "// Elaborazione dati classifiche\nconst html = $input.all()[0].json.data || '';\nconst standings = [];\n\n// Estrai righe tabella\nconst rows = html.match(/<tr[^>]*>.*?<\\/tr>/gi) || [];\n\nrows.forEach((row, index) => {\n  try {\n    const cells = row.match(/<td[^>]*>.*?<\\/td>/gi) || [];\n    if (cells.length < 10) return;\n    \n    const position = parseInt(cells[0].replace(/<[^>]*>/g, '').trim()) || 0;\n    if (position === 0) return;\n    \n    const teamName = cells[1].replace(/<[^>]*>/g, '').trim();\n    if (!teamName || teamName === 'Squadra') return;\n    \n    const points = parseInt(cells[2].replace(/<[^>]*>/g, '').trim()) || 0;\n    const games = parseInt(cells[4].replace(/<[^>]*>/g, '').trim()) || 0;\n    \n    standings.push({\n      position,\n      team: teamName,\n      points,\n      games\n    });\n  } catch (error) {\n    console.error('Errore riga', index, error.message);\n  }\n});\n\nconst result = {\n  standings: standings.sort((a, b) => a.position - b.position),\n  totalTeams: standings.length,\n  lastUpdate: new Date().toISOString(),\n  season: '2025-2026',\n  competition: 'Serie C Maschile Toscana'\n};\n\nconsole.log('Squadre processate:', result.totalTeams);\nreturn { json: result };"
      },
      "id": "b2c3d4e5-6789-abcd-ef01-234567890123",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "condition1",
              "leftValue": "={{ $json.totalTeams }}",
              "rightValue": 5,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c3d4e5f6-789a-bcde-f012-345678901234",
      "name": "IF",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [900, 300]
    },
    {
      "parameters": {
        "url": "https://api.github.com/repos/magiaslab/svbtailwindok3/contents/public/stats/serie-c-stats.json",
        "authentication": "httpHeaderAuth",
        "genericAuthType": "httpHeaderAuth",
        "options": {
          "headers": {
            "Accept": "application/vnd.github.v3+json"
          }
        }
      },
      "id": "d4e5f6g7-89ab-cdef-0123-456789012345",
      "name": "Get File SHA",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1120, 200]
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "https://api.github.com/repos/magiaslab/svbtailwindok3/contents/public/stats/serie-c-stats.json",
        "authentication": "httpHeaderAuth",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "message": "ðŸ“Š Aggiornamento classifiche Serie C",
          "content": "={{ Buffer.from(JSON.stringify($('Code').item.json, null, 2)).toString('base64') }}",
          "sha": "={{ $json.sha }}"
        },
        "options": {
          "headers": {
            "Accept": "application/vnd.github.v3+json"
          }
        }
      },
      "id": "e5f6g7h8-9abc-def0-1234-567890123456",
      "name": "Update File",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1340, 200]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.netlify.com/build_hooks/65f8a1b2-1234-5678-9abc-def012345678",
        "options": {
          "headers": {
            "Content-Type": "application/json"
          }
        }
      },
      "id": "f6g7h8i9-abcd-ef01-2345-678901234567",
      "name": "Netlify Deploy",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1560, 200]
    }
  ],
  "connections": {
    "Start": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "IF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF": {
      "main": [
        [
          {
            "node": "Get File SHA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get File SHA": {
      "main": [
        [
          {
            "node": "Update File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update File": {
      "main": [
        [
          {
            "node": "Netlify Deploy",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-01-28T10:00:00.000Z",
  "versionId": "1"
}
